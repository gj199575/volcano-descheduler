/*
Copyright 2022 The Kubernetes Authors.
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package binpack

import (
	"fmt"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"sigs.k8s.io/descheduler/pkg/api"
)

const (
	// MinResourcePercentage is the minimum value of a resource's percentage
	MinResourcePercentage = 0
	// MaxResourcePercentage is the maximum value of a resource's percentage
	MaxResourcePercentage = 100
)

// +k8s:deepcopy-gen=true
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object

type binPackArgs struct {
	metav1.TypeMeta `json:",inline"`
	ThresholdsDown  int `json:"thresholdsdown"`
	ThresholdsUp    int `json:"thresholdsup"`
	CpuWeight       int `json:"cpuWeight"`
	MemWeight       int `json:"memWeight"`
	NumberOfNodes   int `json:"numberOfNodes"`
	// Naming this one differently since namespaces are still
	// considered while considering resources used by pods
	// but then filtered out before eviction
	EvictableNamespaces *api.Namespaces `json:"evictableNamespaces"`
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *binPackArgs) DeepCopyInto(out *binPackArgs) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	if in.EvictableNamespaces != nil {
		in, out := &in.EvictableNamespaces, &out.EvictableNamespaces
		*out = new(api.Namespaces)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HighNodeUtilizationArgs.
func (in *binPackArgs) DeepCopy() *binPackArgs {
	if in == nil {
		return nil
	}
	out := new(binPackArgs)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *binPackArgs) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

func ValidatebinPackArgs(obj runtime.Object) error {
	args := obj.(*binPackArgs)
	// only exclude can be set, or not at all
	if args.EvictableNamespaces != nil && len(args.EvictableNamespaces.Include) > 0 {
		return fmt.Errorf("only Exclude namespaces can be set, inclusion is not supported")
	}
	return nil
}

func SetDefaults_binPackArgs(obj runtime.Object) {
	args := obj.(*binPackArgs)
	if args.NumberOfNodes == 0 {
		args.NumberOfNodes = 0
	}
}
